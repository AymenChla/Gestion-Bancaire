/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyFrames.MyPanels;

import GestionBancaire.ConnectionBD;
import MyFrames.FrameClient;
import static MyFrames.MyPanels.VisionnerClientPanel.fillTable;
import static MyFrames.MyPanels.VisionnerClientPanel.model;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author asus pro
 */
public class SupprimerComptePanel extends javax.swing.JPanel {

    /**
     * Creates new form SupprimerComptePanel
     */
    public SupprimerComptePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        code_field = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("code: ");

        jButton1.setText("supprimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(70, 70, 70)
                .addComponent(code_field, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jButton1)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(code_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(248, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int code = Integer.parseInt(code_field.getText());
        
        try {
            ConnectionBD conn = new ConnectionBD();
            String sql = "select * from comptes where code_compte=?";
            PreparedStatement preparedstm = conn.initRequetePreparee(sql, true, code);
            ResultSet rs = preparedstm.executeQuery();

            if (rs.next()) {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "code: " + rs.getString("code_compte") + "\nSolde: " + rs.getString("solde_compte") + "\ncode_compte: " + rs.getString("code_compte"), "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION) {

                    //calcul√© nombre compte client
                    sql = "select count(*) as nbtransaction from transactions where code_compte = ?";
                    preparedstm = conn.initRequetePreparee(sql, true, rs.getInt("code_compte"));
                    rs = preparedstm.executeQuery();
                    if (rs.next()) {
                        //si le client n'as pas de compte
                        if (rs.getInt("nbtransaction") == 0) {
                            //suppression effective
                            sql = "delete from comptes where code_compte=?";
                            preparedstm = conn.initRequetePreparee(sql, true, code);
                            preparedstm.executeUpdate();
                            sql = "delete from comptes_courants where code_compte=?;";
                            conn.initRequetePreparee(sql, true ,code).executeUpdate();
                            sql = "delete from comptes_epargnes where code_compte=?;";
                            conn.initRequetePreparee(sql, true ,code).executeUpdate();
                            
                            JOptionPane.showMessageDialog(null, "Compte supprimer");
                        } else {
                            //set client inactif

                            sql = "update comptes set inactif=1 where code_compte=?";
                            preparedstm = conn.initRequetePreparee(sql, true, code);
                            preparedstm.executeUpdate();
                            JOptionPane.showMessageDialog(null, "set compte inactif");
                        }

                        
                         
                        //actualiser la table des clients
                        VisionnerClientPanel.model.setRowCount(0);
                        String requete = "select code_agence from agences where nom_agence=?";
                         rs = conn.initRequetePreparee(requete, true, FrameClient.visionnerClientPanel.getListe_agence().getSelectedItem().toString()).executeQuery();
                        if (rs.next()) {
                             sql = "select * from clients where code_agence=?;";
                            fillTable(sql, rs.getInt("code_agence"));

                        }
                      
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "code inexistant");
            }

            conn.disconnect();
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField code_field;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
